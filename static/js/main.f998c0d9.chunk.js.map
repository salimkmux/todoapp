{"version":3,"sources":["component/TodoApp/TodoApp.js","App.js","reportWebVitals.js","index.js"],"names":["TodoApp","state","input","items","handleChange","event","setState","target","value","storeItems","preventDefault","deleteItem","key","filter","data","index","this","className","onSubmit","type","onChange","placeholder","map","onClick","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"qNAmDeA,EAjDf,4MACIC,MAAQ,CACJC,MAAO,GACPC,MAAO,IAHf,EAMIC,aAAe,SAAAC,GACX,EAAKC,SAAS,CACVJ,MAAOG,EAAME,OAAOC,SARhC,EAYIC,WAAa,SAAAJ,GACTA,EAAMK,iBACN,IAAQR,EAAU,EAAKD,MAAfC,MAER,EAAKI,SAAS,CACVH,MAAM,GAAD,mBAAM,EAAKF,MAAME,OAAjB,CAAwBD,IAC7BA,MAAO,MAlBnB,EAsBIS,WAAa,SAAAC,GAET,EAAKN,SAAS,CACVH,MAAO,EAAKF,MAAME,MAAMU,QAAO,SAACC,EAAMC,GAAP,OAAiBA,IAAUH,QAzBtE,4CA4BI,WAAS,IAAD,OACJ,EAAyBI,KAAKf,MAAtBC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,MAEf,OACI,sBAAKc,UAAU,iBAAf,UACG,uBAAMA,UAAU,gBAAgBC,SAAUF,KAAKP,WAA/C,UACA,yCACG,uBAAOU,KAAK,OAAOX,MAAON,EAAOkB,SAAUJ,KAAKZ,aAAciB,YAAY,mBAE7E,6BACKlB,EAAMmB,KAAI,SAACR,EAAMC,GAAP,OACP,+BACKD,EADL,IACW,mBAAGG,UAAU,mBAAmBM,QAAS,kBAAM,EAAKZ,WAAWI,QADjEA,eAvChC,GAA6BS,aCCd,oBAAM,cAAC,EAAD,KCSNC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAD,MAEFC,SAASC,eAAe,SAM1Bd,M","file":"static/js/main.f998c0d9.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport \"./TodoApp.css\";\r\nexport class TodoApp extends Component {\r\n    state = {\r\n        input: \"\",\r\n        items: []\r\n    };\r\n\r\n    handleChange = event => {\r\n        this.setState({\r\n            input: event.target.value\r\n        });\r\n    };\r\n\r\n    storeItems = event => {\r\n        event.preventDefault();\r\n        const { input } = this.state;\r\n\r\n        this.setState({\r\n            items: [...this.state.items, input],\r\n            input: \"\"\r\n        });\r\n    };\r\n\r\n    deleteItem = key => {\r\n\r\n        this.setState({\r\n            items: this.state.items.filter((data, index) => index !== key)\r\n        });\r\n    };\r\n    render(){\r\n        const { input, items } = this.state;\r\n\r\n        return(\r\n            <div className=\"todo_container\">\r\n               <form className=\"input_section\" onSubmit={this.storeItems}>\r\n               <h1>TodoApp</h1>\r\n                  <input type=\"text\" value={input} onChange={this.handleChange} placeholder=\"Enter items\"/>\r\n               </form>\r\n               <ul>\r\n                   {items.map((data, index) => (\r\n                       <li key={index}>\r\n                           {data} <i className=\"fas fa-trash-alt\" onClick={() => this.deleteItem(index)}></i>\r\n                           </li>\r\n                   ))}\r\n               </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoApp;","import React from \"react\";\nimport TodoApp from \"./component/TodoApp/TodoApp\";\n\nexport default () => <TodoApp />;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}